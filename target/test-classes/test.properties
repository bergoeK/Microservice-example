#H2 Database will delete everything after the last connection has been closed.
# If you want to avoid  that  add ;DB_CLOSE_DELAY=-1
spring.datasource.jdbc-url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true


# Show or not log for each sql query
#spring.jpa.open-in-view set to true avoid the lazy loading exception, when you try to access a reference outside the transantion by 
# calling the get..() methode. because the transaction you start a the service layer continuos in the  web layer. so you continous to use the proxy . 
spring.jpa.open-in-view=false
# show sql query
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.jpa.properties.hibernate.generate_statistics=true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.properties.hibernate.ddl-auto = update




#Error creating bean with name  org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration
#Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: 
#  Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Cannot load driver class: org.h2.Driver


#   https://www.baeldung.com/spring-boot-h2-database
#exclude security Auto-Configuration
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration